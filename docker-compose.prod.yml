version: '3.8'

services:
  # Aplicación Laravel (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: laravel-app-prod
    restart: unless-stopped
    working_dir: /var/www/html
    # Solo override variables específicas de Docker, el resto del .env
    environment:
      - DB_HOST=mysql-prod  # ← Solo esto cambia para Docker
      - REDIS_HOST=redis    # ← Para el servicio Redis
    volumes:
      - ./.env:/var/www/html/.env:ro
      - app_storage:/var/www/html/storage
      - app_bootstrap_cache:/var/www/html/bootstrap/cache
    depends_on:
      mysql-prod:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "php", "artisan", "about"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servidor web Nginx
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # Para SSL en el futuro
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_storage:/var/www/html/storage:ro
    depends_on:
      - app
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Base de datos MySQL
  mysql-prod:
    image: mysql:5.7
    container_name: mysql-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    # No exponemos el puerto por seguridad

  # Redis para cache y sessions (opcional pero recomendado)
  redis:
    image: redis:7-alpine
    container_name: redis-prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - laravel_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  laravel_network:
    driver: bridge

volumes:
  mysql_data_prod:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_bootstrap_cache:
    driver: local
